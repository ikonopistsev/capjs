cmake_minimum_required(VERSION 3.0.2)

file(READ "../version.txt" FILE_VER)
file(READ "../revision.txt" FILE_REV)

# менять верисю пакета тут
project(capjs VERSION ${FILE_VER} LANGUAGES CXX)
# версию сборки тут
# дополнительная версия пакета
set(CUSTOM_BUILD_VERSION ${FILE_REV})

include_directories("/usr/include/mysql")
include_directories("../btdef")

macro(use_cxx11)
  if (CMAKE_VERSION VERSION_LESS "3.1")
    if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
      set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
    endif ()
  else ()
    set (CMAKE_CXX_STANDARD 11)
  endif ()
endmacro(use_cxx11)

use_cxx11()

set(sources
    ../src/json_array.cpp
    ../src/json_object.cpp
    ../src/json_date.cpp
    ../src/json_time.cpp
    ../src/json_write.cpp
    ../src/mkkv.cpp
)

add_library(capjs SHARED ${sources})

set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -s")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -s")

install(TARGETS capjs LIBRARY DESTINATION lib64/mysql/plugin)

#настройки cpack'a
set(CPACK_PACKAGE_VENDOR "LLC Bridge-Technology")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "mysql plugin is converting result to json objects")
set(CPACK_PACKAGE_CONTACT "ikonopistsev@jsuff.com")
set(CPACK_STRIP_FILES TRUE)

# указываем версию пакета (прописывается в пакете)
# рабоает для RPM
set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})

#указываем генератор
set(CPACK_GENERATOR "RPM")

# условие для DEB и RPM
set(CUSTOM_SUFFIX ".el7")

#для RPM
# необходимо выпилить автодиректории
# указывать надо именно полные пути, хз почему
set(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST /usr /usr/lib64 /usr/lib64/mysql /usr/lib64/mysql/plugin)

#добавить зависимость от субд
set(CPACK_RPM_PACKAGE_REQUIRES mariadb-server)

# говорим чтобы он проверил зависимости
set(CPACK_RPM_PACKAGE_AUTOREQ ON)

# прописываем релиз пакета (внутри RPM)
set(CPACK_RPM_PACKAGE_RELEASE ${CUSTOM_BUILD_VERSION})

# формируем релиз пакета с указанием суфикса
set(CUSTOM_FULL_BUILD_VERSION ${CUSTOM_BUILD_VERSION}${CUSTOM_SUFFIX})
# прописываем имя выходного файла
set(CPACK_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}-${CPACK_PACKAGE_VERSION}-${CUSTOM_FULL_BUILD_VERSION}.${CMAKE_SYSTEM_PROCESSOR}")

include(CPack)
